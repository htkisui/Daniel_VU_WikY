// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories;

#nullable disable

namespace Repositories.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240111181723_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Content")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Auteur1",
                            Content = "Commentaire1.1",
                            CreatedAt = new DateTime(2024, 1, 11, 19, 17, 22, 854, DateTimeKind.Local).AddTicks(4752),
                            PostId = 1,
                            UpdatedAt = new DateTime(2024, 1, 11, 19, 17, 22, 854, DateTimeKind.Local).AddTicks(4754)
                        },
                        new
                        {
                            Id = 2,
                            Author = "Auteur1",
                            Content = "Commentaire1.2",
                            CreatedAt = new DateTime(2024, 1, 11, 19, 17, 22, 854, DateTimeKind.Local).AddTicks(4756),
                            PostId = 1,
                            UpdatedAt = new DateTime(2024, 1, 11, 19, 17, 22, 854, DateTimeKind.Local).AddTicks(4757)
                        },
                        new
                        {
                            Id = 3,
                            Author = "Auteur2",
                            Content = "Commentaire2.1",
                            CreatedAt = new DateTime(2024, 1, 11, 19, 17, 22, 854, DateTimeKind.Local).AddTicks(4759),
                            PostId = 2,
                            UpdatedAt = new DateTime(2024, 1, 11, 19, 17, 22, 854, DateTimeKind.Local).AddTicks(4761)
                        });
                });

            modelBuilder.Entity("Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Auteur1",
                            Content = "Article1",
                            CreatedAt = new DateTime(2024, 1, 11, 19, 17, 22, 854, DateTimeKind.Local).AddTicks(4693),
                            Topic = "Theme1",
                            UpdatedAt = new DateTime(2024, 1, 11, 19, 17, 22, 854, DateTimeKind.Local).AddTicks(4744)
                        },
                        new
                        {
                            Id = 2,
                            Author = "Auteur2",
                            Content = "Article2",
                            CreatedAt = new DateTime(2024, 1, 11, 19, 17, 22, 854, DateTimeKind.Local).AddTicks(4747),
                            Topic = "Theme2",
                            UpdatedAt = new DateTime(2024, 1, 11, 19, 17, 22, 854, DateTimeKind.Local).AddTicks(4748)
                        });
                });

            modelBuilder.Entity("Entities.Comment", b =>
                {
                    b.HasOne("Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Entities.Post", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
